# -*- coding: utf-8 -*-
"""メディア工学1-2課題ヤコビ.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E0J-zE6tlcvLNi3r1Aizzy2nbshYdZfn
"""

"""
ヤコビ法は、係数行列Aを対角行列Dとその残余Rの和に分解して計算する。つまりAx=bにA=D+Rを
代入して(D+R)x=bとする。そして次にRx＋Dx=bからDx=b-Rxと変形を行う。この時にk回目の
ループで得られたxの値をx_kとするとx_(k+1)=(b-Rx_(k))/Dのような漸化式が得られる。
初期値はx_0=0とする。また、ヤコビ法には収束条件があり、適当な整数εに対して
|x_(k+1)-x_(k)|/|x_(k+1)|<εが成り立てば終了する特徴を持っている。以上のことを踏まえてまずは
問題文の係数行列、対角行列などの変数を作成し、上で述べた収束条件が成り立つまで漸化式を繰り返し
計算させる考え方でプログラムを作成する。
"""
import numpy as np  #行列が使えるようにモジュールを取り入れる

A = np.array([[2,1],[1, 2]]) #係数行列A
b = np.array([4,5]) #ベクトルb

xold = np.empty_like(b) #これはbと同じ大きさの空の配列を作成
 
D = np.diag(A) #Aの対角行列をDに入れる
R = A - np.diagflat(D) #A=D+Rより求める。これは係数行列Aの対角行列Dとその残余Rを表現してる

#収束判定のために|x-xold|/|x|<1.0e-10となるまでずっとループを繰り返す。 1.0e-10は相対誤差
while 1: 
  x = (b-np.dot(R, xold))/D #漸化式の繰り返しで得られた新しいxの値を計算している
  if np.linalg.norm(x-xold)/np.linalg.norm(x)<1.0e-10: #収束判定 np.linalg.normはベクトルのノルムを計算
    break #収束されたためループから抜ける
  xold = x  #次のxの値を計算するため今のx値をxoldに入れて保持
print(x)  #連立方程式の解を表示 これが収束された最終的な値

